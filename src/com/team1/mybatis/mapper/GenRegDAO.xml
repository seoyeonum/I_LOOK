<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IGenRegDAO">
	
	<!-- 일반 돌봄 근무 등록 -->
	<insert id="add">
	<selectKey keyProperty="gen_reg_id"
               resultType="String"
               order="BEFORE">
      SELECT 'GREG' || LPAD(SEQ_GREG.NEXTVAL, 4, '0') FROM DAUL
	</selectKey>
		INSERT INTO GEN_REG(GEN_REG_ID, SIT_BACKUP_ID, TITLE, START_DATE, END_DATE
		, START_TIME, END_TIME, REG_DATE, INTRODUCTION)
		VALUES(#{gen_reg_id}, #{sit_backup_id}, #{title}
		, #{start_date}, #{end_date}
		, #{start_time}, #{end_time}, SYSDATE, #{introduction})
	</insert>
	
	<!-- 일반 돌봄 근무 삭제 -->
	<delete id="remove">
		DELETE FROM GEN_REG
		WHERE GEN_REG_ID = #{gen_reg_id}
	</delete>
	
	<!-- 시터 근무 가능 목록 -->
	<select id="list" resultType="com.team1.dto.GenRegDTO">
		SELECT GEN_REG_ID, SIT_BACKUP_ID, TITLE, START_DATE, END_DATE
		, START_TIME, END_TIME, REG_DATE, INTRODUCTION
		FROM GEN_REG		
	</select>
	
	<!-- 전체 근무 등록 수 확인 -->
	<select id="countGen" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM GEN_REG
	</select>
	
	<!-- 특정 아이디에 따른 근무 등록 파일-->
	<select id="regList" resultType="com.team1.dto.GenRegDTO">
		SELECT GEN_REG_ID, SIT_BACKUP_ID, TITLE, START_DATE, END_DATE
		, START_TIME, END_TIME, REG_DATE, INTRODUCTION
		FROM GEN_REG
		WHERE GEN_REG_ID = #{gen_reg_id}	
	</select>
	
	<!-- (부모가 보는) 1차 필터 결과 리스트 -->
	<select id="listPrimaryGenReg" resultType="com.team1.dto.GenRegDTO">
		SELECT R.GEN_REG_ID, R.NAME, R.TITLE, R.START_DATE, R.END_DATE, R.START_TIME, R.END_TIME
		     , CASE WHEN NOT EXISTS 
		                (
		                    SELECT 1
		                    FROM GEN_REQ Q
		                    WHERE R.GEN_REG_ID = Q.GEN_REG_ID
		                ) THEN '예약중'
		            ELSE '예약가능'
		            END AS STATUS
		FROM GEN_REG_POSSIBLE_VIEW R
		WHERE R.START_DATE &lt;= #{start_date}
		  AND R.END_DATE &gt;= #{end_date}
		  AND R.START_TIME &lt;= #{start_time}
		  AND R.END_TIME &gt;= #{end_time}
	</select>
	
	<!-- (부모가 보는) 1차 필터 결과 리스트 건수 -->
	<select id="countPrimaryGenReg" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM GEN_REG_POSSIBLE_VIEW R
		WHERE R.START_DATE &lt;= #{start_date}
		  AND R.END_DATE &gt;= #{end_date}
		  AND R.START_TIME &lt;= #{start_time}
		  AND R.END_TIME &gt;= #{end_time}
	</select>
	
	<!-- [관리자] 시터 근무 등록 내역 조회 -->
	<select id="adminListSitGenReg" resultType="com.team1.dto.GenRegDTO">
		SELECT *
		FROM (
		    SELECT T.*, ROWNUM RN
		    FROM (
		        SELECT 
		            R.GEN_REG_ID AS GEN_REG_ID,
		            R.SIT_BACKUP_ID AS SIT_BACKUP_ID,
		            SR.NAME AS NAME,
		            R.TITLE AS TITLE,
		            R.INTRODUCTION AS INTRODUCTION,
		            R.START_DATE AS START_DATE,
		            R.END_DATE AS END_DATE,
		            R.START_TIME AS START_TIME,
		            R.END_TIME AS END_TIME,
		            R.REG_DATE AS REG_DATE,
		            SR.FILE_PATH AS FILE_PATH,
		            SR.SIT_REG_ID AS SIT_REG_ID
		        FROM GEN_REG R
		        JOIN SIT_BACKUP S ON R.SIT_BACKUP_ID = S.SIT_BACKUP_ID
		        JOIN SIT_REG SR ON SR.SIT_BACKUP_ID = S.SIT_BACKUP_ID
		        WHERE 1=1
		        <if test="searchKey != null and searchValue != null and searchValue != ''">
		            <if test="searchKey == 'name'">
		                AND SR.NAME LIKE '%' || #{searchValue} || '%'
		            </if>
		            <if test="searchKey == 'sit_backup_id'">
		                AND R.TITLE LIKE '%' || #{searchValue} || '%'
		            </if>
		        </if>
		        <if test="currentOnly != null and currentOnly == 'current'">
		            AND R.END_DATE >= SYSDATE
		        </if>
		        ORDER BY R.REG_DATE DESC
		    ) T
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<!-- [관리자] 시터 근무 등록 내역 목록 개수 확인 -->
    <select id="adminCountSitGenReg" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
	      FROM GEN_REG R
	      JOIN SIT_BACKUP S ON R.SIT_BACKUP_ID = S.SIT_BACKUP_ID
	      JOIN SIT_REG SR ON SR.SIT_BACKUP_ID = S.SIT_BACKUP_ID
	      WHERE 1=1
	      <if test="searchKey != null and searchValue != null and searchValue != ''">
	          <if test="searchKey == 'name'">
	              AND SR.NAME LIKE '%' || #{searchValue} || '%'
	          </if>
	          <if test="searchKey == 'sit_backup_id'">
	              AND R.TITLE LIKE '%' || #{searchValue} || '%'
	          </if>
	      </if>
	      <if test="currentOnly != null and currentOnly == 'current'">
	          AND R.END_DATE >= SYSDATE
	      </if>
	</select>
	
	<!-- [관리자] 시터 근무 등록 상세내역 조회 -->
    <select id="adminSitGenRegDetail" resultType="com.team1.dto.GenRegDTO">
		SELECT 
	    R.GEN_REG_ID AS GEN_REG_ID,
	    R.SIT_BACKUP_ID AS SIT_BACKUP_ID,
	    SR.NAME AS NAME,
	    R.TITLE AS TITLE,
	    R.INTRODUCTION AS INTRODUCTION,
	    R.START_DATE AS START_DATE,
	    R.END_DATE AS END_DATE,
	    R.START_TIME AS START_TIME,
	    R.END_TIME AS END_TIME,
	    R.REG_DATE AS REG_DATE,
	    SR.FILE_PATH AS FILE_PATH
	FROM GEN_REG R
	JOIN SIT_BACKUP S ON R.SIT_BACKUP_ID = S.SIT_BACKUP_ID
	JOIN SIT_REG SR ON SR.SIT_BACKUP_ID = S.SIT_BACKUP_ID
	WHERE GEN_REG_ID = #{gen_reg_id}
	</select>


<!--     
<select id="countSitGenReg" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM GEN_REG_POSSIBLE_VIEW R
		WHERE R.START_DATE &lt;= #{start_date}
		  AND R.END_DATE &gt;= #{end_date}
		  AND R.START_TIME &lt;= #{start_time}
		  AND R.END_TIME &gt;= #{end_time}
</select>
 -->	
</mapper>
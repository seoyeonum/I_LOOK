<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.ISitCareListDAO">

 	<select id="regList" resultType="com.team1.dto.SitCareListDTO">
 	<!-- // 근무 등록 내역 확인 public ArrayList<SitCareListDTO> regList(String sit_backup_id); -->
 	<!-- <![CDATA[ -->
	 	SELECT GREG.SIT_BACKUP_ID, GREG.GEN_REG_ID AS GEN_REG_ID, GREQ.GEN_REQ_ID AS GEN_REQ_ID
		, GREG.REG_DATE AS REG_DATE
		, GREG.TITLE AS TITLE
        , TO_CHAR(GREG.START_DATE, 'YYYY-MM-DD') AS SIT_START_DATE
		, TO_CHAR(GREG.END_DATE, 'YYYY-MM-DD') AS SIT_END_DATE
        , GREG.START_TIME AS SIT_START_TIME
        , GREG.END_TIME AS SIT_END_TIME
		, GREG.INTRODUCTION AS INTRODUCTION
		, CASE WHEN GREQ.GEN_REG_ID IS NULL
		       THEN '신청 없음'
		       WHEN GREQ.GEN_REG_ID IS NOT NULL AND GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NULL
		       THEN '신청 있음' 
		       WHEN GCAN.GEN_CANCELED_ID IS NOT NULL AND GCON.GEN_CONFIRMED_ID IS NULL
		       THEN '예약 거절'
               WHEN GREV.GEN_REVIEW_ID IS NULL 
                    AND GCON.GEN_CONFIRMED_ID IS NOT NULL 
                    AND GCAN.GEN_CANCELED_ID IS NULL 
                    AND GPCC.GEN_PAR_CONFIRMED_CANCELED_ID IS NULL 
                    AND GSCC.GEN_SIT_CONFIRMED_CANCELED_ID IS NULL
		       THEN '예약 확정'
		       WHEN GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NOT NULL AND GPCC.GEN_PAR_CONFIRMED_CANCELED_ID IS NOT NULL
		       THEN '예약 확정 후 부모 취소'
		       WHEN GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NOT NULL AND GSCC.GEN_SIT_CONFIRMED_CANCELED_ID IS NOT NULL
		       THEN '예약 확정 후 시터 취소'
		       ELSE '조회 실패'
		   END "REQUEST_RESULT"
		FROM GEN_REG GREG
		, GEN_REQ GREQ, GEN_CANCELED GCAN
		, GEN_CONFIRMED GCON, GEN_PAY_REC GPAY, GEN_PAR_CONFIRMED_CANCELED GPCC
		, GEN_SIT_CONFIRMED_CANCELED GSCC, GEN_REVIEWS GREV
		WHERE GREG.GEN_REG_ID = GREQ.GEN_REG_ID(+) 
		AND GREQ.GEN_REQ_ID = GPAY.GEN_REQ_ID(+)
		AND GPAY.GEN_PAY_REC_ID = GCAN.GEN_PAY_REC_ID(+)
		AND GREQ.GEN_REQ_ID = GCON.GEN_REQ_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GPCC.GEN_CONFIRMED_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GSCC.GEN_CONFIRMED_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GREV.GEN_CONFIRMED_ID(+)    
		AND GREG.REG_DATE >= ADD_MONTHS(SYSDATE, -3)
		<!-- AND SYSDATE < GREG.START_DATE -->
		AND GREG.SIT_BACKUP_ID = #{sit_backup_id}
		ORDER BY GREG.REG_DATE DESC
		<!-- ]]> -->
 	</select>
 	
 	<select id="regDetailedList" parameterType="String" resultType="com.team1.dto.SitCareListDTO"> 
 	<!-- // 근무 등록 내역 확인의 상세 정보 AJAX 처리 public ArrayList<SitCareListDTO> regDetailedList(String gen_req_id); -->
	 	SELECT GREG.GEN_REG_ID AS GEN_REG_ID, GREQ.GEN_REQ_ID AS GEN_REQ_ID
		, PREG.NAME AS PAR_NAME, GREQ.REQ_DATE AS REQ_DATE
		, TO_CHAR(GREQ.START_DATE, 'YYYY-MM-DD') AS PAR_START_DATE
		, TO_CHAR(GREQ.END_DATE, 'YYYY-MM-DD') AS PAR_END_DATE
		, TO_CHAR(GREQ.START_TIME) AS PAR_START_TIME, TO_CHAR(GREQ.END_TIME) AS PAR_END_TIME
		, SUBSTR(PREG.ROAD_ADDR, 1, (INSTR(PREG.ROAD_ADDR, '구', 1))) AS GU_ADDR
		, CASE WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 3 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 4 THEN '여아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 7 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 8 THEN '여아'
		       ELSE '쿼리문 오류'
		   END "CHILD_GENDER"
		, TO_CHAR(EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(CREG.SSN_FIRST, 1, 2)) - 2000) AS CHILD_AGE
		, NVL2(CMED.MEDICAL_TYPE_ID, MTYPE.TYPE, '무') AS MEDICAL_TYPE
		, NVL2(CALL.ALLERGIE_TYPE_ID, ATYPE.TYPE, '무') AS ALLERGIE_TYPE
		, NVL2(CDIS.DISABILITY_TYPE_ID, DTYPE.TYPE, '무') AS DISABILITY_TYPE
		, GREQ.MESSAGE AS MESSAGE
		FROM GEN_REG GREG, GEN_REQ GREQ
		, CHILD_BACKUP CBAC, CHILD_REG CREG, PAR_BACKUP PBAC, PAR_REG PREG
		, CHILD_MEDICALS CMED, MEDICAL_TYPES MTYPE, CHILD_ALLERGIES CALL, ALLERGIE_TYPES ATYPE
		, CHILD_DISABILITIES CDIS, DISABILITY_TYPES DTYPE
		WHERE GREG.GEN_REG_ID = GREQ.GEN_REG_ID 
		AND GREQ.CHILD_BACKUP_ID = CBAC.CHILD_BACKUP_ID
		AND CBAC.CHILD_BACKUP_ID = CREG.CHILD_BACKUP_ID
		AND CBAC.PAR_BACKUP_ID = PBAC.PAR_BACKUP_ID
		AND PBAC.PAR_BACKUP_ID = PREG.PAR_BACKUP_ID
		AND CREG.CHILD_REG_ID = CMED.CHILD_REG_ID(+)
		AND CREG.CHILD_REG_ID = CALL.CHILD_REG_ID(+)
		AND CREG.CHILD_REG_ID = CDIS.CHILD_REG_ID(+)
		AND MTYPE.MEDICAL_TYPE_ID(+) = CMED.MEDICAL_TYPE_ID
		AND ATYPE.ALLERGIE_TYPE_ID(+) = CALL.ALLERGIE_TYPE_ID
		AND DTYPE.DISABILITY_TYPE_ID(+) = CDIS.DISABILITY_TYPE_ID
		AND GREQ.GEN_REQ_ID = #{gen_req_id}
 	</select>
 	
 	<select id="answerList" resultType="com.team1.dto.SitCareListDTO">
 	<!-- // 돌봄 제공 내역 확인	public ArrayList<SitCareListDTO> answerList(String sit_backup_id); -->
 		<![CDATA[
        SELECT GREG.SIT_BACKUP_ID AS SIT_BACKUP_ID, GREG.GEN_REG_ID AS GEN_REG_ID, GREQ.GEN_REQ_ID AS GEN_REQ_ID
		, GREQ.REQ_DATE AS REQ_DATE
		, TO_CHAR(GREQ.START_DATE, 'YYYY-MM-DD') AS PAR_START_DATE
		, TO_CHAR(GREQ.END_DATE, 'YYYY-MM-DD') AS PAR_END_DATE
		, GREQ.START_TIME AS PAR_START_TIME, GREQ.END_TIME AS PAR_END_TIME
		, SUBSTR(PREG.ROAD_ADDR, 1, (INSTR(PREG.ROAD_ADDR, '구', 1))) AS GU_ADDR
		, CASE WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 3 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 4 THEN '여아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 7 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 8 THEN '여아'
		       ELSE '쿼리문 오류'
		   END "CHILD_GENDER"
		, TO_CHAR(EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(CREG.SSN_FIRST, 1, 2)) - 2000) AS CHILD_AGE
		, CASE WHEN (GREQ.GEN_REG_ID) IS NULL
		       THEN '신청 없음'
		       WHEN GREQ.GEN_REG_ID IS NOT NULL AND GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NULL AND GREQ.START_DATE > SYSDATE
		       THEN '신청 있음' 
		       WHEN GREQ.GEN_REG_ID IS NOT NULL AND GCAN.GEN_CANCELED_ID IS NOT NULL AND GCON.GEN_CONFIRMED_ID IS NULL
		       THEN '예약 취소'
		       WHEN GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NOT NULL AND GPCC.GEN_PAR_CONFIRMED_CANCELED_ID IS NOT NULL
		       THEN '예약 확정 후 부모 취소'
		       WHEN GCAN.GEN_CANCELED_ID IS NULL AND GCON.GEN_CONFIRMED_ID IS NOT NULL AND GSCC.GEN_SIT_CONFIRMED_CANCELED_ID IS NOT NULL
		       THEN '예약 확정 후 시터 취소'
		       WHEN GCON.GEN_CONFIRMED_ID IS NOT NULL AND GREV.GEN_REVIEW_ID IS NULL AND GREQ.START_DATE > SYSDATE
		       THEN '예약 확정'
		       WHEN GCON.GEN_CONFIRMED_ID IS NOT NULL AND GREQ.START_DATE <= SYSDATE AND SYSDATE <= GREQ.END_DATE
		       THEN '돌봄 진행 중'
		       WHEN GCON.GEN_CONFIRMED_ID IS NOT NULL AND GREQ.END_DATE < SYSDATE
		       THEN '돌봄 완료'
		       ELSE '조회 실패'
		   END "REQUEST_RESULT"
		FROM SIT_BACKUP SBAC, GEN_REG GREG
		, GEN_REQ GREQ, GEN_CANCELED GCAN
		, GEN_CONFIRMED GCON, GEN_PAY_REC GPAY, GEN_PAR_CONFIRMED_CANCELED GPCC
		, GEN_SIT_CONFIRMED_CANCELED GSCC, GEN_REVIEWS GREV
		, CHILD_BACKUP CBAC, CHILD_REG CREG, PAR_BACKUP PBAC, PAR_REG PREG
		WHERE SBAC.SIT_BACKUP_ID = GREG.SIT_BACKUP_ID 
		AND GREG.GEN_REG_ID = GREQ.GEN_REG_ID
		AND GREQ.GEN_REQ_ID = GPAY.GEN_REQ_ID
		AND GPAY.GEN_PAY_REC_ID = GCAN.GEN_PAY_REC_ID(+)
		AND GREQ.GEN_REQ_ID = GCON.GEN_REQ_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GPCC.GEN_CONFIRMED_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GSCC.GEN_CONFIRMED_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GREV.GEN_CONFIRMED_ID(+)
		AND GREQ.CHILD_BACKUP_ID = CBAC.CHILD_BACKUP_ID
		AND CBAC.CHILD_BACKUP_ID = CREG.CHILD_BACKUP_ID
		AND CBAC.PAR_BACKUP_ID = PBAC.PAR_BACKUP_ID
		AND PBAC.PAR_BACKUP_ID = PREG.PAR_BACKUP_ID
		AND GREG.REG_DATE >= ADD_MONTHS(SYSDATE, -3)
		AND GREG.SIT_BACKUP_ID = #{sit_backup_id}
		ORDER BY GREQ.REQ_DATE DESC, GREQ.START_DATE DESC, GREQ.END_DATE DESC
		]]>
 	</select>
 	
 	<select id="answerDetailedList" resultType="com.team1.dto.SitCareListDTO">
 	<!-- // 돌봄 제공 내역 확인의 상세 정보 새창 처리 public ArrayList<SitCareListDTO> answerDetailedList(String gen_req_id); -->
	 	SELECT GREG.GEN_REG_ID AS GEN_REG_ID, GREQ.GEN_REQ_ID AS GEN_REQ_ID
		, PREG.NAME AS PAR_NAME, GREQ.REQ_DATE AS REQ_DATE
		, TO_CHAR(GREQ.START_DATE, 'YYYY-MM-DD') AS PAR_START_DATE
		, TO_CHAR(GREQ.END_DATE, 'YYYY-MM-DD') AS PAR_END_DATE
		, TO_CHAR(GREQ.START_TIME) AS PAR_START_TIME
		, TO_CHAR(GREQ.END_TIME) AS PAR_END_TIME
		, PREG.ROAD_ADDR AS ROAD_ADDR
		, PREG.DETAILED_ADDR AS DETAILED_ADDR
		, CREG.NAME AS CHI_NAME
		, CASE WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 3 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 4 THEN '여아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 7 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 8 THEN '여아'
		       ELSE '쿼리문 오류'
		   END "CHILD_GENDER"
		, TO_CHAR(EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(CREG.SSN_FIRST, 1, 2)) - 2000) AS CHILD_AGE
		, TO_CHAR(CREG.HEIGHT) AS HEIGHT
		, TO_CHAR(CREG.WEIGHT) AS WEIGHT
		, CREG.BLOOD_TYPE AS BLOOD_TYPE
		, NVL2(CMED.MEDICAL_TYPE_ID, MTYPE.TYPE, '무') AS MEDICAL_TYPE
		, NVL2(CALL.ALLERGIE_TYPE_ID, ATYPE.TYPE, '무') AS ALLERGIE_TYPE
		, NVL2(CDIS.DISABILITY_TYPE_ID, DTYPE.TYPE, '무') AS DISABILITY_TYPE
		, CREG.SPECIAL_NOTES AS SPECIAL_NOTES 
		, GREQ.MESSAGE AS MESSAGE
		FROM GEN_REG GREG, GEN_REQ GREQ, GEN_CONFIRMED GCON
		, CHILD_BACKUP CBAC, CHILD_REG CREG, PAR_BACKUP PBAC, PAR_REG PREG
		, CHILD_MEDICALS CMED, MEDICAL_TYPES MTYPE, CHILD_ALLERGIES CALL, ALLERGIE_TYPES ATYPE
		, CHILD_DISABILITIES CDIS, DISABILITY_TYPES DTYPE
		WHERE GREG.GEN_REG_ID = GREQ.GEN_REG_ID 
		AND GREQ.GEN_REQ_ID = GCON.GEN_REQ_ID
		AND GREQ.CHILD_BACKUP_ID = CBAC.CHILD_BACKUP_ID
		AND CBAC.CHILD_BACKUP_ID = CREG.CHILD_BACKUP_ID
		AND CBAC.PAR_BACKUP_ID = PBAC.PAR_BACKUP_ID
		AND PBAC.PAR_BACKUP_ID = PREG.PAR_BACKUP_ID
		AND CREG.CHILD_REG_ID = CMED.CHILD_REG_ID(+)
		AND CREG.CHILD_REG_ID = CALL.CHILD_REG_ID(+)
		AND CREG.CHILD_REG_ID = CDIS.CHILD_REG_ID(+)
		AND MTYPE.MEDICAL_TYPE_ID(+) = CMED.MEDICAL_TYPE_ID
		AND ATYPE.ALLERGIE_TYPE_ID(+) = CALL.ALLERGIE_TYPE_ID
		AND DTYPE.DISABILITY_TYPE_ID(+) = CDIS.DISABILITY_TYPE_ID
		AND GREQ.GEN_REQ_ID = #{gen_req_id}
 	</select>
 	
 	<select id="genCompleteList" resultType="com.team1.dto.SitCareListDTO">
 	<!-- // 돌봄 완료 내역 확인(일반) public ArrayList<SitCareListDTO> genCompleteList(String sit_backup_id); -->
 	<![CDATA[
	 	SELECT GREG.SIT_BACKUP_ID AS SIT_BACKUP_ID
	 	, GREG.GEN_REG_ID AS GEN_REG_ID
	 	, GREQ.GEN_REQ_ID AS GEN_REQ_ID
		, PREG.NAME
		, TO_CHAR(GREQ.REQ_DATE, 'YYYY-MM-DD') AS REQ_DATE
		, TO_CHAR(GREQ.START_DATE, 'YYYY-MM-DD') AS PAR_START_DATE
		, TO_CHAR(GREQ.END_DATE, 'YYYY-MM-DD') AS PAR_END_DATE
		, GREQ.START_TIME AS PAR_START_TIME, GREQ.END_TIME AS PAR_END_TIME
		, SUBSTR(PREG.ROAD_ADDR, 1, (INSTR(PREG.ROAD_ADDR, '구', 1))) AS GU_ADDR
		, CASE WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 3 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 4 THEN '여아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 7 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 8 THEN '여아'
		       ELSE '쿼리문 오류'
		   END "CHILD_GENDER"
		, EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(CREG.SSN_FIRST, 1, 2)) - 2000 AS CHILD_AGE
		, GPCC.GEN_PAR_CONFIRMED_CANCELED_ID
		, GSCC.GEN_SIT_CONFIRMED_CANCELED_ID
		FROM GEN_REG GREG, GEN_REQ GREQ, GEN_CONFIRMED GCON
		, CHILD_BACKUP CBAC, CHILD_REG CREG, PAR_BACKUP PBAC, PAR_REG PREG
		, GEN_PAR_CONFIRMED_CANCELED GPCC, GEN_SIT_CONFIRMED_CANCELED GSCC
		WHERE GREG.GEN_REG_ID = GREQ.GEN_REG_ID 
		AND GREQ.GEN_REQ_ID = GCON.GEN_REQ_ID
		AND GREQ.CHILD_BACKUP_ID = CBAC.CHILD_BACKUP_ID
		AND CBAC.CHILD_BACKUP_ID = CREG.CHILD_BACKUP_ID
		AND CBAC.PAR_BACKUP_ID = PBAC.PAR_BACKUP_ID
		AND PBAC.PAR_BACKUP_ID = PREG.PAR_BACKUP_ID
		AND GCON.GEN_CONFIRMED_ID = GPCC.GEN_CONFIRMED_ID(+)
		AND GCON.GEN_CONFIRMED_ID = GSCC.GEN_CONFIRMED_ID(+)
		AND GPCC.GEN_PAR_CONFIRMED_CANCELED_ID IS NULL
		AND GSCC.GEN_SIT_CONFIRMED_CANCELED_ID IS NULL
		AND GREQ.END_DATE < SYSDATE
		AND GREG.SIT_BACKUP_ID = #{sit_backup_id}
		ORDER BY GREQ.END_TIME DESC
		]]>
 	</select>
 	
 	<select id="emgCompleteList" resultType="com.team1.dto.SitCareListDTO">
 	<!-- // 돌봄 완료 내역 확인(긴급) public ArrayList<SitCareListDTO> emgCompleteList(String sit_backup_id); -->
 	<![CDATA[
	 	SELECT EREQ.EMG_REQ_ID AS EMG_REQ_ID
		, PREG.NAME AS NAME, EREQ.REQ_DATE AS REQ_DATE
		, EREQ.START_DATE AS PAR_START_DATE, EREQ.END_DATE AS PAR_END_DATE
		, EREQ.START_TIME AS PAR_START_TIME, EREQ.END_TIME AS PAR_END_TIME
		, SUBSTR(PREG.ROAD_ADDR, 1, (INSTR(PREG.ROAD_ADDR, '구', 1))) AS GU_ADDR
		, CASE WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 3 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 4 THEN '여아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 7 THEN '남아'
		       WHEN SUBSTR(CREG.SSN_SECOND, 1, 1) IN 8 THEN '여아'
		       ELSE '쿼리문 오류'
		   END "CHILD_GENDER"
		, EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(CREG.SSN_FIRST, 1, 2)) - 2000 AS CHILD_AGE
		FROM SIT_BACKUP SBAC, CHILD_BACKUP CBAC, CHILD_REG CREG
		, PAR_BACKUP PBAC, PAR_REG PREG, EMG_REQ EREQ
		, EMG_CONFIRMED ECON, EMG_PAY_REC EPAY, EMG_CANCELED ECAN
		WHERE CBAC.PAR_BACKUP_ID = PBAC.PAR_BACKUP_ID
		AND CBAC.CHILD_BACKUP_ID = CREG.CHILD_BACKUP_ID
		AND PBAC.PAR_BACKUP_ID = PREG.PAR_BACKUP_ID
		AND EREQ.CHILD_BACKUP_ID = CBAC.CHILD_BACKUP_ID
		AND ECON.EMG_REQ_ID = EREQ.EMG_REQ_ID
		AND SBAC.SIT_BACKUP_ID = ECON.SIT_BACKUP_ID
		AND EREQ.EMG_REQ_ID = EPAY.EMG_REQ_ID
		AND EPAY.EMG_PAY_REC_ID = ECAN.EMG_PAY_REC_ID(+)
		AND ECAN.EMG_PAY_REC_ID IS NULL
		AND EREQ.END_DATE < SYSDATE
		AND SBAC.SIT_BACKUP_ID = #{sit_backup_id}
		ORDER BY EREQ.END_DATE DESC
		]]>
 	</select>
 	
</mapper>

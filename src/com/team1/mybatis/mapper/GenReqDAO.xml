<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IGenReqDAO">

	<!-- 일반 돌봄 예약 신청(등록) -->
	<insert id="add">
	<selectKey keyProperty="gen_req_id" resultType="String" order="BEFORE">
		SELECT 'GREQ' || LPAD(SEQ_GREQ.NEXTVAL, 4, '0') 
		FROM DUAL
	</selectKey>
		INSERT INTO GEN_REQ (GEN_REQ_ID, GEN_REG_ID, CHILD_BACKUP_ID, MESSAGE, START_DATE, END_DATE
		, START_TIME, END_TIME, REQ_DATE, SIT_READ_DATE)
		VALUES(#{gen_req_id}, #{gen_reg_id}, #{child_backup_id}, #{message}
				, TO_DATE(#{start_date},'YYYY-MM-DD'), TO_DATE(#{end_date},'YYYY-MM-DD')
				, #{start_time}, #{end_time}, DEFAULT, NULL)
	</insert>
	
	<!-- 일반 돌봄 예약 삭제 -->
	<delete id="remove">
		DELETE 
		FROM GEN_REQ
		WHERE GEN_REQ_ID = #{gen_req_id}
	</delete>
	
	<!-- 신청이 등록된 전체 리스트 -->
	<select id="list" resultType="com.team1.dto.GenReqDTO">
		SELECT GEN_REQ_ID, GEN_REG_ID, CHILD_BACKUP_ID, MESSAGE, START_DATE, END_DATE
		, START_TIME, END_TIME, REQ_DATE, SIT_READ_DATE
		FROM GEN_REQ
		ORDER BY GEN_REQ_ID
	</select>
	
	<!-- 관리자가 보는 신청이 등록된 일반돌봄 예약 전체 리스트 -->
	<select id="adminListSitGenReg" resultType="com.team1.dto.GenReqDTO">
	    SELECT *
	    FROM (
	        SELECT V.*, ROWNUM AS RN
	        FROM (
	            SELECT GEN_REQ_ID, GEN_REG_ID, PAR_BACKUP_ID, PAR_NAME, NAME,
	                   START_DATE, END_DATE, START_TIME, END_TIME, REQ_DATE, STATUS
	            FROM ADMIN_GEN_REQ_VIEW
	            WHERE 1=1
			
	            <if test="statusFilter != null and statusFilter != '' and statusFilter != 'all'">
	                AND STATUS = #{statusFilter}
	            </if>
	
	            <if test="searchKey != null and searchValue != null and searchValue != ''">
	                <choose>
	                    <when test="searchKey == 'par_name'">
	                        AND PAR_NAME LIKE '%' || #{searchValue} || '%'
	                    </when>
	                    <when test="searchKey == 'par_backup_id'">
	                        AND PAR_BACKUP_ID LIKE '%' || #{searchValue} || '%'
	                    </when>
	                </choose>
	            </if>
				<if test="dateRangeStart != null and dateRangeStart != ''">
				    AND REQ_DATE >= #{dateRangeStart}
				</if>
	            ORDER BY REQ_DATE DESC
	        ) V
	    )
	    WHERE RN BETWEEN #{start} AND #{end}
	</select>


	
	<!-- 관리자가 보는 신청이 등록된 일반돌봄 예약 전체 개수 -->
	<select id="adminCountGenReq" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS count
	    FROM ADMIN_GEN_REQ_VIEW
	    WHERE 1=1
	
	    <if test="statusFilter != null and statusFilter != '' and statusFilter != 'all'">
	        AND STATUS = #{statusFilter}
	    </if>
	
	    <if test="searchKey != null and searchValue != null and searchValue != ''">
	        <choose>
	            <when test="searchKey == 'par_name'">
	                AND PAR_NAME LIKE '%' || #{searchValue} || '%'
	            </when>
	            <when test="searchKey == 'par_backup_id'">
	                AND PAR_BACKUP_ID LIKE '%' || #{searchValue} || '%'
	            </when>
	        </choose>
	    </if>
	    
	     <if test="dateRangeStart != null and dateRangeStart != ''">
		    AND REQ_DATE >= #{dateRangeStart}
		</if>
	    
	</select>

	
	<!-- 특정 아이디의 예약 등록건 찾기 -->
	<select id="search" resultType="com.team1.dto.GenReqDTO">
		SELECT GEN_REQ_ID, GEN_REG_ID, CHILD_BACKUP_ID, MESSAGE, START_DATE, END_DATE
		, START_TIME, END_TIME, REQ_DATE, SIT_READ_DATE
		FROM GEN_REQ
		WHERE GEN_REQ_ID = #{gen_req_id}
		ORDER BY GEN_REQ_ID
	</select>


	<!-- 부모 기준 예약 내역 조회 -->
	<select id="findByParent" resultType="com.team1.dto.GenReqDTO">
	    SELECT *
	    FROM PARENT_USED_VIEW
	    WHERE PAR_BACKUP_ID = #{par_backup_id}
	    ORDER BY START_DATE DESC
	</select>

	<select id="listByParent" parameterType="String" resultType="com.team1.dto.ChildDTO">
	    SELECT *
	    FROM CHILD_BACKUP CB
	    JOIN CHILD_REG CR ON CB.CHILD_BACKUP_ID = CR.CHILD_BACKUP_ID
	    WHERE CB.PAR_BACKUP_ID = #{parBackupId}
	    ORDER BY CR.NAME
	</select>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IChildDAO">

    <!-- 아이 정보 등록 -->
    <insert id="add">
        INSERT INTO CHILD_REG (
            CHILD_REG_ID, CHILD_BACKUP_ID, NAME, HEIGHT, WEIGHT,
            SSN_FIRST, SSN_SECOND,
            SPECIAL_NOTES, BLOOD_TYPE
        )
        VALUES (
            #{child_reg_id}, #{child_backup_id}, #{name}, #{height}, #{weight},
            #{ssn_first}, #{ssn_second},
            #{special_notes}, #{blood_type}
        )
    </insert>

    <!-- 아이 정보 수정 -->
    <update id="modify">
        UPDATE CHILD_REG
        SET NAME = #{name},
            HEIGHT = #{height},
            WEIGHT = #{weight},
            SPECIAL_NOTES = #{special_notes}
        WHERE CHILD_REG_ID = #{child_reg_id}
    </update>

    <!-- 아이 삭제 -->
    <delete id="remove">
        DELETE FROM CHILD_REG
        WHERE CHILD_REG_ID = #{child_reg_id}
    </delete>

    <!-- 전체 아이 목록 -->
    <select id="list" resultType="com.team1.dto.ChildDTO">
        SELECT * FROM V_CHILD_INFO
    </select>

    <!-- 특정 아이 조회 -->
    <select id="childList" resultType="com.team1.dto.ChildDTO">
        SELECT * FROM V_CHILD_INFO
        WHERE CHILD_REG_ID = #{child_reg_id}
    </select>

    <!-- 전체 인원 수 -->
    <select id="countChild" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM V_CHILD_INFO
    </select>

    <!-- 지병 등록 -->
    <insert id="addDisease">
        INSERT INTO CHILD_MEDICALS (
            CHILD_MEDICAL_ID, MEDICAL_TYPE_ID, REG_DATE, CHILD_REG_ID
        ) VALUES (
            #{child_medical_id}, #{medical_type_id}, SYSDATE, #{child_reg_id}
        )
    </insert>

    <!-- 지병 조회 -->
    <select id="searchDisease" resultType="java.lang.String">
        SELECT MT.TYPE
        FROM CHILD_MEDICALS CM
        JOIN MEDICAL_TYPES MT ON CM.MEDICAL_TYPE_ID = MT.MEDICAL_TYPE_ID
        WHERE CHILD_REG_ID IN (
            SELECT CHILD_REG_ID FROM CHILD_REG WHERE CHILD_BACKUP_ID = #{child_backup_id}
        )
    </select>

    <!-- 지병 삭제 -->
    <delete id="removeDisease">
        DELETE FROM CHILD_MEDICALS
        WHERE CHILD_MEDICAL_ID = #{child_medical_id}
    </delete>

    <!-- 알레르기 등록 -->
    <insert id="addAllergy">
        INSERT INTO CHILD_ALLERGIES (
            CHILD_ALLERGY_ID, ALLERGIE_TYPE_ID, REG_DATE, CHILD_REG_ID
        ) VALUES (
            #{child_allergy_id}, #{allergy_type_id}, SYSDATE, #{child_reg_id}
        )
    </insert>

    <!-- 알레르기 조회 -->
    <select id="searchAllergy" resultType="java.lang.String">
        SELECT AT.TYPE
        FROM CHILD_ALLERGIES CA
        JOIN ALLERGIE_TYPES AT ON CA.ALLERGIE_TYPE_ID = AT.ALLERGIE_TYPE_ID
        WHERE CHILD_REG_ID IN (
            SELECT CHILD_REG_ID FROM CHILD_REG WHERE CHILD_BACKUP_ID = #{child_backup_id}
        )
    </select>

    <!-- 알레르기 삭제 -->
    <delete id="removeAllergy">
        DELETE FROM CHILD_ALLERGIES
        WHERE CHILD_ALLERGY_ID = #{child_allergy_id}
    </delete>

    <!-- 장애 등록 -->
    <insert id="addDisability">
        INSERT INTO CHILD_DISABILITIES (
            CHILD_DISABILITY_ID, DISABILITY_TYPE_ID, REG_DATE, CHILD_REG_ID
        ) VALUES (
            #{child_disability_id}, #{disability_type_id}, SYSDATE, #{child_reg_id}
        )
    </insert>

    <!-- 장애 조회 -->
    <select id="searchDisability" resultType="java.lang.String">
        SELECT DT.TYPE
        FROM CHILD_DISABILITIES CD
        JOIN DISABILITY_TYPES DT ON CD.DISABILITY_TYPE_ID = DT.DISABILITY_TYPE_ID
        WHERE CHILD_REG_ID IN (
            SELECT CHILD_REG_ID FROM CHILD_REG WHERE CHILD_BACKUP_ID = #{child_backup_id}
        )
    </select>

    <!-- 장애 삭제 -->
    <delete id="removeDisability">
        DELETE FROM CHILD_DISABILITIES
        WHERE CHILD_DISABILITY_ID = #{child_disability_id}
    </delete>

    <!-- 부모 백업 ID 조회 -->
    <select id="findParBackupId" parameterType="string" resultType="string">
        SELECT PAR_BACKUP_ID
        FROM PAR_BACKUP
        WHERE ID = #{id}
    </select>

    <!-- 아이 백업 정보 등록 -->
    <insert id="addChildBackup" parameterType="com.team1.dto.ChildDTO">
        INSERT INTO CHILD_BACKUP (
            CHILD_BACKUP_ID, PAR_BACKUP_ID, REG_DATE
        ) VALUES (
            #{child_backup_id}, #{par_backup_id}, SYSDATE
        )
    </insert>

    <!-- 유형 테이블 조회 -->
	    <select id="getDisabilityTypes" resultType="com.team1.dto.ChildDTO">
	        SELECT DISABILITY_TYPE_ID, TYPE FROM DISABILITY_TYPES
	    </select>
	
	    <select id="getAllergyTypes" resultType="com.team1.dto.ChildDTO">
	        SELECT ALLERGIE_TYPE_ID AS allergy_type_id, TYPE FROM ALLERGIE_TYPES
	    </select>
	
	    <select id="getMedicalTypes" resultType="com.team1.dto.ChildDTO">
	        SELECT MEDICAL_TYPE_ID AS medical_type_id, TYPE FROM MEDICAL_TYPES
	    </select>
	    
	<select id="findChildrenByParent" resultType="com.team1.dto.ChildDTO">
	    SELECT C.NAME, C.CHILD_REG_ID, CB.CHILD_BACKUP_ID
	    FROM CHILD_REG C
	    JOIN CHILD_BACKUP CB ON C.CHILD_BACKUP_ID = CB.CHILD_BACKUP_ID
	    WHERE CB.PAR_BACKUP_ID = #{parBackupId}
	</select>
	
	<!-- 특정 아이에 대한 수정 -->
	<select id="findByBackupId" resultType="com.team1.dto.ChildDTO">
	    SELECT * 
	    FROM CHILD_REG
	    WHERE CHILD_BACKUP_ID = #{child_backup_id}
	</select>
	
	<delete id="removeByBackupId">
	    DELETE FROM CHILD_REG
	    WHERE CHILD_BACKUP_ID = #{child_backup_id}
	</delete>
	
	<!-- 특정 아이 삭제 시 -->
	<delete id="removeDiseaseByBackup">
	    DELETE FROM CHILD_MEDICALS
	    WHERE CHILD_REG_ID IN (
	        SELECT CHILD_REG_ID
	        FROM CHILD_REG
	        WHERE CHILD_BACKUP_ID = #{child_backup_id}
	    )
	</delete>
	
	<delete id="removeAllergyByBackup">
	    DELETE FROM CHILD_ALLERGIES
	    WHERE CHILD_REG_ID IN (
	        SELECT CHILD_REG_ID
	        FROM CHILD_REG
	        WHERE CHILD_BACKUP_ID = #{child_backup_id}
	    )
	</delete>
	
	<delete id="removeDisabilityByBackup">
	    DELETE FROM CHILD_DISABILITIES
	    WHERE CHILD_REG_ID IN (
	        SELECT CHILD_REG_ID
	        FROM CHILD_REG
	        WHERE CHILD_BACKUP_ID = #{child_backup_id}
	    )
	</delete>
	<!-- 백업 ID 기준으로 CHILD_REG 삭제 -->
	<delete id="removeByBackupId">
	    DELETE FROM CHILD_REG
	    WHERE CHILD_BACKUP_ID = #{child_backup_id}
	</delete>
	
	<!-- CHILD_BACKUP 삭제 -->
	<delete id="removeChildBackup">
	    DELETE FROM CHILD_BACKUP
	    WHERE CHILD_BACKUP_ID = #{child_backup_id}
	</delete>

</mapper>

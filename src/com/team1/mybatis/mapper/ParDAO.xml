<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.IParDAO">

    <!-- ◆ 부모 정보 조회 (백업코드 기준) -->
    <select id="search" resultType="com.team1.dto.ParDTO">
        SELECT R.PAR_REG_ID, R.PAR_BACKUP_ID, R.NAME, R.PW, R.TEL, R.SSN_FIRST, R.SSN_SECOND,
               R.ROAD_ADDR, R.DETAILED_ADDR, R.ZIP_CODE, B.ID
        FROM PAR_REG R
        JOIN PAR_BACKUP B ON R.PAR_BACKUP_ID = B.PAR_BACKUP_ID
        WHERE R.PAR_BACKUP_ID = #{par_backup_id}
    </select>

    <!-- ◆ 부모 정보 수정 (업데이트) ※ modify → update로 통일 -->
    <update id="update" parameterType="com.team1.dto.ParDTO">
        UPDATE PAR_REG
        SET NAME = #{name},
            PW = #{pw},
            TEL = #{tel},
            ROAD_ADDR = #{road_addr},
            DETAILED_ADDR = #{detailed_addr},
            ZIP_CODE = #{zip_code}
        WHERE PAR_REG_ID = #{par_reg_id}
    </update>

    <!-- ◆ 회원가입 시 ID 중복 체크 -->
    <select id="checkId" parameterType="String" resultType="int">
        SELECT COUNT(*) 
        FROM PAR_REG 
        WHERE PAR_REG_ID = #{par_reg_id}
    </select>

    <!-- ◆ 부모 전체 목록 조회 -->
    <select id="list" resultType="com.team1.dto.ParDTO">
        SELECT PAR_REG_ID, PAR_BACKUP_ID, NAME, PW, TEL, SSN_FIRST, SSN_SECOND,
               ROAD_ADDR, DETAILED_ADDR, ZIP_CODE
        FROM PAR_REG
    </select>

    <!-- ◆ 부모 전체 인원 수 조회 -->
    <select id="countMember" resultType="java.lang.Integer">
        SELECT COUNT(*) AS COUNT FROM PAR_REG
    </select>

    <!-- ◆ 포인트 조회: 현재 보유 포인트 -->
    <select id="searchPoint" resultType="java.lang.Integer">
        SELECT SUM(
            CASE 
                WHEN TYPE IN ('일반적립', '일반환불', '긴급적립', '긴급환불') THEN POINT
                WHEN TYPE IN ('일반차감', '긴급차감') THEN -POINT
                ELSE 0
            END
        ) AS TOTAL_POINT
        FROM TOTAL_POINT_VIEW
        WHERE PAR_BACKUP_ID = #{par_backup_id}
    </select>

    <!-- ◆ 포인트 조회: 특정 시점 기준 -->
    <select id="searchPointAt" resultType="java.lang.Integer">
        SELECT SUM(
            CASE 
                WHEN TYPE IN ('일반적립', '일반환불', '긴급적립', '긴급환불') THEN POINT
                WHEN TYPE IN ('일반차감', '긴급차감') THEN -POINT
                ELSE 0
            END
        ) AS TOTAL_POINT
        FROM TOTAL_POINT_VIEW
        WHERE PAR_BACKUP_ID = #{par_backup_id}
          AND CHANGED_DATE &lt; #{date}
    </select>

    <!-- ◆ 부모 백업 추가 (ID 생성 포함) -->
    <insert id="addBackup" parameterType="com.team1.dto.ParDTO">
        <selectKey keyProperty="par_backup_id" resultType="String" order="BEFORE">
            SELECT 'PBAC' || LPAD(PAR_BACKUP_SEQ.NEXTVAL, 4, '0') FROM DUAL
        </selectKey>
        INSERT INTO PAR_BACKUP (PAR_BACKUP_ID, ID, REG_DATE)
        VALUES (#{par_backup_id}, #{id}, SYSDATE)
    </insert>

    <!-- ◆ 부모 등록 (회원가입 시 사용) -->
    <insert id="add" parameterType="com.team1.dto.ParDTO">
        <selectKey keyProperty="par_reg_id" resultType="String" order="BEFORE">
            SELECT 'PREG' || LPAD(PAR_REG_SEQ.NEXTVAL, 4, '0') FROM DUAL
        </selectKey>
        INSERT INTO PAR_REG (PAR_REG_ID, PAR_BACKUP_ID, NAME, PW, TEL, 
                             SSN_FIRST, SSN_SECOND, ROAD_ADDR, DETAILED_ADDR, ZIP_CODE)
        VALUES (#{par_reg_id}, #{par_backup_id}, #{name}, #{pw}, #{tel}, 
                #{ssn_first}, #{ssn_second}, #{road_addr}, #{detailed_addr}, #{zip_code})
    </insert>

    <!-- ◆ 부모 탈퇴 기록 등록 -->
    <insert id="addWithdrawed" parameterType="com.team1.dto.ParWithdrawedDTO">
        INSERT INTO PAR_WITHDRAWED (PAR_WITHDRAWED_ID, WITHDRAWED_DATE, PAR_BACKUP_ID, REASON_WITHDRAWED_ID)
        VALUES (#{par_withdrawed_id}, SYSDATE, #{par_backup_id}, #{reason_withdrawed_id})
    </insert>

</mapper>
